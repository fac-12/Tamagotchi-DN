{"dependencies":[{"name":"react"},{"name":"../../../token"},{"name":"../card/user_info"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Form = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _token = require(\"../../../token\");\n\nvar _user_info = require(\"../card/user_info\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Form = exports.Form = function (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Form.__proto__ || Object.getPrototypeOf(Form)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      login: \"\",\n      data: {}\n    }, _this.handleChange = function (event) {\n      var target = event.target;\n      var value = target.value;\n      console.log(target.name, value);\n      _this.setState({ login: value });\n    }, _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var data = JSON.stringify(_this.state);\n      console.log(\"state: \", _this.state);\n      fetch(\"https://api.github.com/users/\" + _this.state.login + \"?access_token=\" + _token.token).then(function (res) {\n        if (res.status !== 200) {\n          console.log(\"Something went wrong with the request\");\n        }\n        return res.json();\n      }).then(function (data) {\n        return _this.setState({ data: data });\n      }).catch(function (err) {\n        throw new Error(\"Fetching failed\");\n      });\n      _this.setState({ login: \"\" });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(\n        \"div\",\n        null,\n        _react2.default.createElement(\n          \"form\",\n          { onSubmit: this.handleSubmit },\n          _react2.default.createElement(\n            \"label\",\n            { htmlFor: \"name\" },\n            \"GitHub Username:\"\n          ),\n          _react2.default.createElement(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: this.state.input,\n            onChange: this.handleChange\n          }),\n          _react2.default.createElement(\n            \"button\",\n            { type: \"submit\" },\n            \"Get my Tamagotchi\"\n          )\n        ),\n        _react2.default.createElement(_user_info.UserInfo, this.state.data)\n      );\n    }\n  }]);\n\n  return Form;\n}(_react2.default.Component);"},"hash":"db5ddbcb7f72e19769021f339c02896a"}